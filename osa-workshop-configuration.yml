---

- name: Load workshop variables
  hosts: localhost
  tasks:

    - name: Local variables
      include_vars:
        file: osa-workshop-variables.yml
      tags:
        - always

- name: Configure workshop
  hosts: localhost
  tasks:

    - name: Make swap persistent
      lineinfile:
        path: /etc/fstab
        line: /openstack/swap.img none swap sw 0 0

    - name: Get cloud secrets
      shell: grep "{{ item }}" /etc/openstack_deploy/user_secrets.yml | cut -d ' ' -f 2
      register: cloud_secrets_output
      with_items:
        - keystone_auth_admin_password
        - octavia_service_password

    - name: Register cloud secrets
      set_fact:
        cloud_secrets: "{{ cloud_secrets | default({}) | combine({item.item: item.stdout}) }}"
      with_items:
        - "{{ cloud_secrets_output.results }}"

    - name: Create clouds.yml
      template:
        src: clouds.yml.j2
        dest: /root/clouds.yml
      tags:
        - container_setup
        - utility_setup

    - name: Find utility container name
      shell: set -o pipefail && lxc-ls -f | grep utility | cut --delimiter " " --fields 1
      register: "utility_container_name_output"

    - name: Register utility container name
      set_fact:
        utility_container_name: "{{ utility_container_name_output.stdout }}"

    - name: Find rsyslog container name
      shell: set -o pipefail && lxc-ls -f | grep rsyslog | cut --delimiter " " --fields 1
      register: "rsyslog_container_name_output"

    - name: Register rsyslog container name
      set_fact:
        rsyslog_container_name: "{{ rsyslog_container_name_output.stdout }}"

    - name: Add utility container to inventory
      add_host:
        groups: utility_containers
        name: "{{ utility_container_name }}"

    - name: Add rsyslog container to inventory
      add_host:
        groups: rsyslog_containers
        name: "{{ rsyslog_container_name }}"

- hosts: rsyslog_containers
  gather_facts: no
  remote_user: root
  tasks:

    - name: Install log cleaner script
      copy:
        src: clean-logs.sh
        dest: /root/clean-logs.sh
        owner: root
        group: root
        mode: '0755'
      tags:
        - container_setup
        - rsyslog_setup

- hosts: utility_containers
  gather_facts: no
  remote_user: root
  vars:
    cloud_secrets: "{{ hostvars['localhost']['cloud_secrets'] }}"
  tasks:

    - name: Install Python openstacksdk in utility container
      zypper:
        name: python-openstacksdk
      async: 300
      poll: 10
      tags:
        - container_setup
        - utility_setup

    - name: Copy bashrc
      copy:
        src: /root/.bashrc
        dest: /root/.bashrc
        mode: '0644'
      tags:
        - container_setup
        - utility_setup

    - name: Create openrc for demo user in utility container
      template:
        src: openrc.j2
        dest: "/root/{{ item.username }}-openrc"
      with_items:
        - username: demo
          password: demo
          project: demo
          tenant: demo
        - username: octavia
          password: "{{ cloud_secrets['octavia_service_password'] }}"
          project: service
          tenant: service
      tags:
        - container_setup
        - utility_setup

    - name: Create clouds.yml
      template:
        src: clouds.yml.j2
        dest: /root/clouds.yml
        owner: root
        group: root
        mode: '0644'
      tags:
        - container_setup
        - utility_setup

    - name: Assign Member role to demo user
      os_user_role:
        cloud: admin
        project: demo
        role: member
        user: demo
        verify: no
      tags:
        - container_setup
        - utility_setup

    - name: Check for existing keypair
      command: test -f /root/.ssh/id_rsa
      register: keypair_output
      ignore_errors: yes
      tags:
        - container_setup
        - utility_setup

    - name: Create keypair
      command: ssh-keygen -q -t rsa -f /root/.ssh/id_rsa -C "" -N ""
      when: keypair_output is failed
      tags:
        - container_setup
        - utility_setup

    - name: Delete old OpenStack keypair for octavia
      os_keypair:
        cloud: octavia
        name: workshop
        state: absent
        verify: no
      tags:
        - container_setup
        - utility_setup

    - name: Install OpenStack keypair for octavia
      os_keypair:
        cloud: octavia
        public_key_file: .ssh/id_rsa.pub
        name: workshop
        verify: no
      tags:
        - container_setup
        - utility_setup

    - name: Check for ping/ssh security group
      os_security_group:
        cloud: admin
        name: ping/ssh
        description: "Allow ICMP and SSH ingress traffic"
        verify: no
      tags:
        - container_setup
        - utility_setup

    - name: Check for ping/ssh ICMP rule
      os_security_group_rule:
        cloud: admin
        direction: ingress
        remote_ip_prefix: 0.0.0.0/0
        protocol: icmp
        security_group: ping/ssh
        verify: no
      tags:
        - container_setup
        - utility_setup

    - name: Check for ping/ssh ssh rule
      os_security_group_rule:
        cloud: admin
        direction: ingress
        remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        security_group: ping/ssh
        verify: no
      tags:
        - container_setup
        - utility_setup

    - name: Check for m1.tiny flavor
      os_nova_flavor:
        cloud: admin
        name: m1.tiny
        ram: 256
        vcpus: 1
        disk: 0
        is_public: yes
        verify: no
      tags:
        - container_setup
        - utility_setup
