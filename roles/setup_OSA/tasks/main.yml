---

- name: Load constants
  include_vars:
    file: constants.yml
  tags:
    - always

- name: Load variables
  include_vars:
    file: variables.yml
  tags:
    - always

- name: "Clone openstack-ansible repository (at tag {{ osa_tag }})"
  become: yes
  git:
    clone: yes
    dest: "{{ osa_repodir }}"
    repo: "{{ osa_repository }}"
    update: yes
    force: yes
    version: "{{ osa_tag }}"
  tags:
    - clone_osa_repo

- name: Reset and clean openstack-ansible repository so we can apply the patches
  become: yes
  shell: git reset --hard && git clean -dfx
  args:
    chdir: "{{ osa_repodir }}"
  tags:
    - clone_osa_repo

- name: Bootstrap ansible
  become: yes
  shell: |
    set -o pipefail &&
    ./scripts/bootstrap-ansible.sh 2>&1 | tee --append /var/log/bootstrap-ansible.output
  args:
    chdir: "{{ osa_repodir }}"
  register: bootstrap_ansible
  until: bootstrap_ansible is succeeded
  retries: 1
  async: 1200
  poll: 10
  tags:
    - bootstrap_ansible

- name: Ensure /etc/openstack_deploy is present
  become: yes
  file:
    path: /etc/openstack_deploy
    mode: '0755'
    state: directory
    owner: root
    group: root
  tags:
    - osa_user_variables

- name: Update user variables
  become: yes
  template:
    dest: "/etc/openstack_deploy/{{ item }}"
    src: "{{ item }}.j2"
  with_items:
    - user_variables_designate.yml
    - user_variables_neutron.yml
    - user_variables_nova.yml
    - user_variables_octavia.yml
    - user_variables_workshop.yml
  tags:
    - osa_user_variables

- name: "Bootstrap AIO (SCENARIO {{ osa_scenario }})"
  become: yes
  shell: |
    set -o pipefail
    ./scripts/bootstrap-aio.sh 2>&1 | tee --append /var/log/bootstrap-aio.output
  args:
    chdir: "{{ osa_repodir }}"
    executable: /bin/bash
  environment:
    PATH: "/usr/local/bin:{{ lookup('env', 'PATH') }}"
    SCENARIO: "{{ osa_scenario }}"
  register: bootstrap_aio
  until: bootstrap_aio is succeeded
  retries: 1
  async: 1200
  poll: 10
  tags:
    - bootstrap_aio

- name: Add services
  become: yes
  shell: |
    cp -v \
      "{{ osa_repodir }}/etc/openstack_deploy/conf.d/{{ item }}.yml.aio" \
      "/etc/openstack_deploy/conf.d/{{ item }}.yml"
  args:
    creates: "/etc/openstack_deploy/conf.d/{{ item }}.yml"
  with_items: "{{ osa_services }}"
  tags:
    - osa_services

- name: Run setup-hosts playbook
  become: yes
  shell: |
    set -o pipefail
    openstack-ansible --verbose --verbose setup-hosts.yml 2>&1 | tee --append /var/log/setup-hosts.output
  args:
    chdir: "{{ osa_repodir }}/playbooks"
    executable: /bin/bash
  environment:
    PATH: "/usr/local/bin:{{ lookup('env', 'PATH') }}"
    ANSIBLE_STDOUT_CALLBACK: "debug"
  register: aio_setup_hosts
  until: aio_setup_hosts is succeeded
  retries: 2
  async: "{{ 2 * 3600 }}"
  poll: 60
  tags:
    - aio_setup_hosts

- name: Run setup-infrastructure playbook
  become: yes
  shell: |
    set -o pipefail
    openstack-ansible --verbose --verbose setup-infrastructure.yml 2>&1 | tee --append /var/log/setup-infrastructure.output
  args:
    chdir: "{{ osa_repodir }}/playbooks"
    executable: /bin/bash
  environment:
    PATH: "/usr/local/bin:{{ lookup('env', 'PATH') }}"
    ANSIBLE_STDOUT_CALLBACK: "debug"
  register: aio_setup_infrastructure
  until: aio_setup_infrastructure is succeeded
  retries: 2
  async: "{{ 2 * 3600 }}"
  poll: 60
  tags:
    - aio_setup_infrastructure

- name: Run setup-openstack playbook
  become: yes
  shell: |
    set -o pipefail
    openstack-ansible --verbose --verbose setup-openstack.yml 2>&1 | tee --append /var/log/setup-openstack.output
  args:
    chdir: "{{ osa_repodir }}/playbooks"
    executable: /bin/bash
  environment:
    PATH: "/usr/local/bin:{{ lookup('env', 'PATH') }}"
    ANSIBLE_STDOUT_CALLBACK: "debug"
  register: aio_setup_openstack
  until: aio_setup_openstack is succeeded
  retries: 2
  async: "{{ 2 * 3600 }}"
  poll: 60
  tags:
    - aio_setup_openstack

- name: Copy log cleanup script
  become: yes
  copy:
    src: clean-logs.sh
    dest: /root/clean-logs.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - aio_configuration

- name: Create OSA configuration playbook
  become: yes
  copy:
    src: osa-workshop-configuration.yml
    dest: /root/osa-workshop-configuration.yml
    owner: root
    group: root
    mode: '0644'
  tags:
    - aio_configuration

- name: Create OSA configuration variables
  become: yes
  template:
    src: osa-workshop-variables.yml.j2
    dest: /root/osa-workshop-variables.yml
    owner: root
    group: root
    mode: '0644'
  tags:
    - aio_configuration

- name: Copy additional templates
  become: yes
  copy:
    src: "{{ item }}"
    dest: "/root/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - openrc.j2
    - clouds.yml.j2
  tags:
    - aio_configuration
